@inject IUserService UserService
@inject NavigationManager navManager
@inject IUserService UserService
@inject IPersonService PersonService
<a class="nav-link nav-profile d-flex align-items-center pe-0" href="#" data-bs-toggle="dropdown">
    <img src="/assets/img/profile-img.jpg" alt="Profile" class="rounded-circle">
    <span class="d-none d-md-block dropdown-toggle ps-2">@UserService.User.FirstName @UserService.User.LastName</span>
</a><!-- End Profile Iamge Icon -->

<ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow profile">
    <li class="dropdown-header">
        <span>@UserService.User.Username </span>
        @* <span>Web Designer</span>*@
    </li>
    <li>
        <hr class="dropdown-divider">
    </li>

    <li>
        <a class="dropdown-item d-flex align-items-center" href=@ProfileUrl>
            <i class="bi bi-person"></i>
            <span>My Profile</span>
        </a>
    </li>
    <li>
        <hr class="dropdown-divider">
    </li>



    <li>
        <a class="dropdown-item d-flex align-items-center">
            <i class="bi bi-box-arrow-right"></i>
            <NavLink href="/user/logout">Logout</NavLink>
        </a>
    </li>

</ul><!-- End Profile Dropdown Items -->
@code {
    public string ProfileUrl { get; set; }
    protected override async Task OnParametersSetAsync()
    {
        base.OnInitialized();
        var person = await PersonService.GetPersonByUser(UserService.User.Id);
        ProfileUrl = $"person/updateperson/{person.PersonId}";
        await base.OnParametersSetAsync();
    }

}
